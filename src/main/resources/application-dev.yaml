spring:
  datasource:
    driverClassName: org.mariadb.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mariadb://localhost:3306/demo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: root
    password: 12345678aA@

    hikari:
      pool-name: Hikari
      max-lifetime: 1800000      # Thời gian tối đa của một connection (ms)
      idle-timeout: 300000        # Thời gian giữ connection không hoạt động (ms)
      minimum-idle: 50           # Số connection tối thiểu trong pool
      maximum-pool-size: 100     # Số connection tối đa trong pool
      connection-timeout: 60000 # (60 giây) Thời gian chờ tối đa để lấy một kết nối từ pool
      auto-commit: false
      keepalive-time: 30000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jpa:
    show-sql: false  # Ẩn câu lệnh SQL trong logs
    hibernate:
      ddl-auto: none  # Không tự động tạo bảng (cấu hình này thường dùng cho production)
    properties:
      hibernate:
        format_sql: true  # Format SQL cho dễ đọc
        dialect: org.hibernate.dialect.MariaDBDialect  # Dialect cho MariaDBDialect

  task:
    execution:
      thread-name-prefix: Base-task-
      pool:
        core-size: 100   # Số lượng luồng lõi
        max-size: 200    # Số lượng luồng tối đa
        queue-capacity: 10000  # Số tác vụ có thể chờ trong hàng đợi
    scheduling:
      thread-name-prefix: Base-scheduling-
      pool:
        size: 100  # Số lượng luồng tối đa để chạy các tác vụ theo lịch

  servlet:
    multipart:
      file-size-threshold: 2KB
      max-file-size: 200MB  # Giới hạn dung lượng file tải lên
      max-request-size: 200MB  # Giới hạn tổng dung lượng request
  mail:
    host: smtp.gmail.com
    port: 587
    username: notification.test.hrm01@gmail.com
    password: wmmohxyduatnaunt
    protocol: smtp
    properties.mail.smtp:
      auth: false
      starttls:
        enable: false
      socketFactory:
        port: 25
  data:
    redis:
      repositories:
        enabled: false

  liquibase:
    contexts: prod
    enabled: true

application:
  cors:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    exposed-headers: "Authorization,Content-Disposition,Content-Type,Cache-Control,Response-Content,Accept-Language,X-TZ-OFFSET,X-REQUEST-ID"
    allow-credentials: false
    max-age: 31536000
  security:
    authentication:
      jwt:
        base64-secret: RWdaamFISnZiV1V5QmdnQUVFVVlPVElKQ0FFUUFCZ1RHSUFFTWdrSUFoQUFHQk1ZZ0FReURBZ0RFQUFZQ2hnVEdCWVlIaklLQ0FRUUFCZ1RHQllZSGpJTUNBVVFBQmdLR0JNWUZoZ2VNZ29JQmhBQUdCTVlGaGdlTWdvSUJ4QUFHQk1ZRmhnZU1nb0lDQkFBR0JNWUZoZ2VNZ29JQ1JBQUdCTVlGaGdlMGdFSU5EZ3dPV293YWplb0FnaXdBZ0h4QlNQRHRYUDh0Mlg1OFFVanc3VnpfTGRs
  minio:
    endpoint: http://localhost:9000
    access-key: admin
    secret-key: admin123
    bucket-name: my-bucket
    secure: false
  redis:
    mode: standalone # standalone | sentinel
    stand-alone-host: localhost
    stand-alone-port: 6379

    sentinel:
      name-node: mymaster
      sentinel-nodes:
        - 10.54.30.78:8195
      sentinel-password: "+coffpmLQ4pafDJk4vC8Gg=="
      redis-password: "+coffpmLQ4pafDJk4vC8Gg=="

    topic:
      qr-login: /topic/loginQR
      notification: /topic/notification
      layer2cache: /topic/layer2-cache
      feedback: /topic/feedback
